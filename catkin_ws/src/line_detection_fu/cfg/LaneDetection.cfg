#!/usr/bin/env python
PACKAGE = "line_detection_fu"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
width=640
length=480
gen.add("defaultXLeft",    int_t,    0, "LEFT lane border position", -100,  -300, width)
gen.add("defaultXCenter",  int_t,    0, "CENTER lane border position",160,  0, width)
gen.add("defaultXRight",   int_t,    0, "RIGHT lane border position", 500,  0, width)
gen.add("interestDistancePoly",    		int_t,    0, "interestDistancePoly - to previous poly", 10,  0, 400)
gen.add("interestDistanceDefault", 		int_t,    0, "interestDistanceDefault - to default lines", 20,  0, 400)
gen.add("iterationsRansac",        		int_t,    0, "iterationsRansac", 30,  0, 100)
gen.add("maxYRoi",   	   int_t,    0, "max Y roi", 479,  0, 480)
gen.add("minYDefaultRoi",  int_t,    0, "min Y default roi", 0,  0, 480)
gen.add("minYPolyRoi",     int_t,    0, "min Y poly roi", 0,  0, 480)
gen.add("polyY1",     	   int_t,    0, "Y of first point for generating lane poly", 131,  0, width)
gen.add("polyY2",     	   int_t,    0, "Y of second point for generating lane poly", 161,  0, width)
gen.add("polyY3",     	   int_t,    0, "Y of third point for generating lane poly", 211,  0, width)
gen.add("detectLaneStartX",int_t,    0, "beginning point for gradients etc", 100,  0, width)
gen.add("maxAngleDiff",    int_t,    0, "maxAngleDiff - optional smoothing when angle diff larger than this", 999,  1, 999)
gen.add("proj_y_start",    int_t,    0, "Y position of processed window inside of IPmapped img", 50,  0, 80)
gen.add("roi_top_w",       int_t,    0, "roi_top_width", 640,  0, width)
gen.add("roi_bottom_w",    int_t,    0, "roi_bottom_width", 640,  0, width)
gen.add("proportionThreshould",    		double_t, 0, "supporter proportionThreshould",    .5, 0,   1)
gen.add("m_gradientThreshold",    		int_t,    0, "m_gradientThreshold", 10,  0, 100)
gen.add("m_nonMaxWidth",   				int_t,    0, "m_nonMaxWidth", 10,  0, 100)
gen.add("laneMarkingSquaredThreshold",  int_t,    0, "laneMarkingSquaredThreshold", 1400,  0, 10000)
gen.add("angleAdjacentLeg",   			int_t,    0, "-Y position of where the angle of polynomial is computed", 400,  0, 1200)
gen.add("scanlinesVerticalDistance",   	int_t,    0, "scanlinesVerticalDistance", 3,  0, 160)
gen.add("scanlinesMaxCount",   			int_t,    0, "scanlinesMaxCount", 160,  0, 160)

exit(gen.generate(PACKAGE, "line_detection_fu", "LaneDetection"))

